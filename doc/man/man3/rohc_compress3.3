.\" File automatically generated by doxy2man0.1
.\" Generation date: dim. ao√ªt 9 2015
.TH rohc_compress3 3 2015-08-09 "ROHC" "ROHC library Programmer's Manual"
.SH "NAME"
rohc_compress3 \- Compress the given uncompressed packet into a ROHC packet.
.SH SYNOPSIS
.nf
.B #include <rohc/rohc_comp.h>
.sp
\fBint rohc_compress3\fP(
    \fBstruct rohc_comp *const     comp\fP,
    \fBconst struct rohc_ts        arrival_time\fP,
    \fBconst unsigned char *const  uncomp_packet\fP,
    \fBconst size_t                uncomp_packet_len\fP,
    \fBunsigned char *const        rohc_packet\fP,
    \fBconst size_t                rohc_packet_max_len\fP,
    \fBsize_t *const               rohc_packet_len\fP
);
.fi
.SH DESCRIPTION
.PP 
Compress the given uncompressed packet into a ROHC packet. The compression may succeed into two different ways: 
.PP 
.RS
.PP 
\(bu return \fBROHC_OK\fP and a full ROHC packet, 
.PP 
\(bu return \fBROHC_NEED_SEGMENT\fP and no ROHC data if ROHC segmentation is required.
.PP 
.RE
.PP 
The ROHC compressor has to use ROHC segmentation if the output buffer rohc_packet was too small for the compressed ROHC packet and if the Maximum Reconstructed Reception Unit (MRRU) configured with the function \fBrohc_comp_set_mrru\fP was not exceeded. If ROHC segmentation is used, one may use the \fBrohc_comp_get_segment\fP function to retrieve all the ROHC segments one by one.
.PP 
do not use this function anymore, use rohc_compress4() instead
.SH PARAMETERS
.TP
.B comp
The ROHC compressor 
.TP
.B arrival_time
The time at which packet was received (0 if unknown, or to disable time-related features in the ROHC protocol) 
.TP
.B uncomp_packet
The uncompressed packet to compress 
.TP
.B uncomp_packet_len
The size of the uncompressed packet 
.TP
.B rohc_packet
The buffer where to store the ROHC packet 
.TP
.B rohc_packet_max_len
The maximum length (in bytes) of the buffer for the ROHC packet 
.TP
.B rohc_packet_len [output]
The length (in bytes) of the ROHC packet 
.SH STRUCTURES
.SS "A timestamp for the ROHC library"
.PP
.sp
.PP 
Could be easily created from \fBstruct\fP \fBtimespec\fP...
.PP 
 
.sp
.RS
.nf
struct \fBrohc_ts\fP {
  uint64_t \fIsec\fP;  /* The seconds part of the timestamp */
  uint64_t \fInsec\fP; /* The nanoseconds part of the timestamp */
};
.fi
.RE
.SH RETURN VALUE
.PP
Possible return values: 
.RS

\(bu \fBROHC_OK\fP if a ROHC packet is returned 

\(bu \fBROHC_NEED_SEGMENT\fP if no ROHC data is returned and ROHC segments can be retrieved with \fBrohc_comp_get_segment\fP 

\(bu \fBROHC_ERROR\fP if an error occurred


.RE


.SH EXAMPLE
.nf
struct rohc_comp *compressor;           /* the ROHC compressor */
ruct rohc_ts arrival_time = { .sec = 0, .nsec = 0 };
 char ip_packet[BUFFER_SIZE];   // the buffer that will contain
                                // the IPv4 packet to compress
p_packet_len;                   // the length (in bytes) of the
                                // IPv4 packet
 char rohc_packet[BUFFER_SIZE]; // the buffer that will contain
                                // the resulting ROHC packet
ohc_packet_len;                 // the length (in bytes) of the
                                // resulting ROHC packet

hc_compress3(compressor, arrival_time, ip_packet, ip_packet_len,
             rohc_packet, BUFFER_SIZE, &rohc_packet_len);
if(status == ROHC_STATUS_SEGMENT)
{
        /* success: compression succeeded, but resulting ROHC packet was too
         * large for the Maximum Reconstructed Reception Unit (MRRU) configured
         * with rohc_comp_set_mrru, the rohc_packet buffer contains the
         * first ROHC segment and rohc_comp_get_segment can be used to
         * retrieve the next ones. */

}
else if(status == ROHC_STATUS_OK)
{
        /* success: compression succeeded, and resulting ROHC packet fits the
         * Maximum Reconstructed Reception Unit (MRRU) configured with
         * rohc_comp_set_mrru, the rohc_packet buffer contains the
         * rohc_packet_len bytes of the ROHC packet */

}
else
{
        /* compressor failed to compress the IP packet */

}




.fi
.SH SEE ALSO
.BR rohc_comp.h (3),
.BR ROHC_OK (3),
.BR ROHC_NEED_SEGMENT (3),
.BR rohc_comp_set_mrru (3),
.BR rohc_comp_get_segment (3),
.BR ROHC_ERROR (3)
