.\" File automatically generated by doxy2man0.1
.\" Generation date: dim. ao√ªt 9 2015
.TH rohc_decomp_new 3 2015-08-09 "ROHC" "ROHC library Programmer's Manual"
.SH "NAME"
rohc_decomp_new \- Create a new ROHC decompressor.
.SH SYNOPSIS
.nf
.B #include <rohc/rohc_decomp.h>
.sp
\fBstruct rohc_decomp * rohc_decomp_new\fP(
    \fBconst rohc_cid_type_t    cid_type\fP,
    \fBconst rohc_cid_t         max_cid\fP,
    \fBconst rohc_mode_t        mode\fP,
    \fBstruct rohc_comp *const  comp\fP
);
.fi
.SH DESCRIPTION
.PP 
Create a new ROHC decompressor with the given type of CIDs, MAX_CID, operational mode, and (optionally) related compressor for the feedback channel.
.PP 
please do not use this function anymore use rohc_decomp_new2() and rohc_decompress3() instead
.SH PARAMETERS
.TP
.B cid_type
The type of Context IDs (CID) that the ROHC decompressor shall operate with.
 Accepted values are: 
.RS

\(bu \fBROHC_SMALL_CID\fP for small CIDs 

\(bu \fBROHC_LARGE_CID\fP for large CIDs 


.RE
.TP
.B max_cid
The maximum value that the ROHC decompressor should use for context IDs (CID). As CIDs starts with value 0, the number of contexts is \fBmax_cid\fP + 1.
 Accepted values are: 
.RS

\(bu [0, \fBROHC_SMALL_CID_MAX\fP] if \fBcid_type\fP is \fBROHC_SMALL_CID\fP 

\(bu [0, \fBROHC_LARGE_CID_MAX\fP] if \fBcid_type\fP is \fBROHC_LARGE_CID\fP 


.RE
.TP
.B mode
The operational mode that the ROHC decompressor shall transit to.
 Accepted values are: 
.RS

\(bu \fBROHC_U_MODE\fP for the Unidirectional mode, 

\(bu \fBROHC_O_MODE\fP for the Bidirectional Optimistic mode, 

\(bu \fBROHC_R_MODE\fP for the Bidirectional Reliable mode is not supported yet: specifying \fBROHC_R_MODE\fP is an error. 


.RE
.TP
.B comp
The associated ROHC compressor for the feedback channel.
 Accepted values: 
.RS

\(bu a valid ROHC compressor created with \fBrohc_comp_new\fP to enable the feedback channel, 

\(bu NULL to disable the feedback channel.


.RE

The feedback channel is optional in Unidirectional mode: 
.RS

\(bu if NULL, no feedback is emitted at all, 

\(bu if not NULL, positive acknowlegments may be transmitted on feedback channel to increase timeouts of IR and FO refreshes.


.RE

The feedback channel is mandatory in both Bidirectional modes: specifying NULL is an error. 
.SH STRUCTURES
.SH RETURN VALUE
.PP
The created decompressor if successful, NULL if creation failed
.SH NOTES
.PP
Don't forget to free decompressor memory with \fBrohc_decomp_free\fP if rohc_decomp_new succeeded
.SH EXAMPLE
.nf
struct rohc_decomp *decompressor;       /* the ROHC decompressor */

/* Create a ROHC decompressor to operate:
 *  - with large CIDs,
 *  - with the maximum of 5 streams (MAX_CID = 4),
 *  - in Unidirectional mode (U-mode).
 */
ssor = rohc_decomp_new(ROHC_LARGE_CID, 4, ROHC_U_MODE, NULL);
pressor == NULL)

fprintf(stderr, "failed create the ROHC decompressor\n");
goto error;


rohc_decomp_free(decompressor);



.fi
.SH SEE ALSO
.BR rohc_decomp.h (3),
.BR ROHC_SMALL_CID (3),
.BR ROHC_LARGE_CID (3),
.BR ROHC_SMALL_CID_MAX (3),
.BR ROHC_LARGE_CID_MAX (3),
.BR ROHC_U_MODE (3),
.BR ROHC_O_MODE (3),
.BR ROHC_R_MODE (3),
.BR rohc_comp_new (3),
.BR rohc_decomp_free (3),
.BR rohc_decompress3 (3),
.BR rohc_decomp_set_traces_cb (3),
.BR rohc_decomp_enable_profiles (3),
.BR rohc_decomp_enable_profile (3),
.BR rohc_decomp_disable_profiles (3),
.BR rohc_decomp_disable_profile (3),
.BR rohc_decomp_set_mrru (3),
.BR rohc_decomp_set_features (3)
